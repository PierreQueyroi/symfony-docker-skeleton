version: '3.5'

name: ${COMPOSE_PROJECT_NAME:-project}

services:

  # PHP container
  php-fpm:
    container_name: ${COMPOSE_PROJECT_NAME:-project}-php-fpm
    build:
      context: docker/php
      target: app_php_${APP_ENV:-prod}
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - APP_ENV=${APP_ENV:-prod}
    volumes:
      - ./:/var/www
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:${IP_HOST:-127.0.0.1}

  # Webserver container
  caddy:
    container_name: ${COMPOSE_PROJECT_NAME:-project}-caddy
    restart: unless-stopped
    build:
      context: docker/caddy
    volumes:
      - ./public/:/var/www/public:ro
      - ./docker/ssl/self_signed.crt:/etc/caddy/self_signed.crt:ro
      - ./docker/ssl/self_signed.key:/etc/caddy/self_signed.key:ro
      - caddy_data:/data
    depends_on:
      - php-fpm
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  # The Postgres DB Server
  db:
    container_name: ${COMPOSE_PROJECT_NAME:-project}-db
    image: postgres:${DATABASE_VERSION}-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PWD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USR}
    volumes:
      - db_volume:/var/lib/postgresql/data/

  # A PGAdmin container for Tooling
  pgadmin:
    container_name: ${COMPOSE_PROJECT_NAME:-project}-pgadmin
    build:
      context: docker/pgadmin
    depends_on:
      - db
    restart: always
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USR: ${DATABASE_USR}
      DATABASE_PWD: ${DATABASE_PWD}
      PGADMIN_USER: ${PGADMIN_USER}
      PGADMIN_PWD: ${PGADMIN_PWD}
    volumes:
      - pg_admin:/var/lib/pgadmin
      - ./docker/ssl/self_signed.crt:/certs/server.cert:ro
      - ./docker/ssl/self_signed.key:/certs/server.key:ro
    ports:
      - target: 443
        published: ${PGADMIN_PORT:-8443}
        protocol: tcp

volumes:
  caddy_data:
    driver: local
  db_volume:
    driver: local
  pg_admin:
    driver: local
